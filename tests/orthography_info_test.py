import unittest
from pathlib import Path

from jkUnicode.orthography import OrthographyInfo


def get_font_path(filename="Empty-Regular.ttf"):
    return Path(__file__).parent / "data" / filename


def get_cmap():
    from fontTools.ttLib import TTFont

    return TTFont(get_font_path()).getBestCmap()


class TestOrthographyInfo(unittest.TestCase):
    def test_known_orthographies(self):
        o = OrthographyInfo()
        orthographies = {f"{ot.name}: {ot.code}" for ot in o.orthographies}
        assert orthographies == {
            "Abkhazian: ab",
            "Afar: aa",
            "Afrikaans: af",
            "Aghem: agq",
            "Akan: ak",
            "Akoose: bss",
            "Albanian: sq",
            "Amharic: am",
            "Anii: blo",
            "Arabic (Morocco): ar",
            "Arabic: ar",
            "Aragonese: an",
            "Armenian: hy",
            "Assamese: as",
            "Asturian: ast",
            "Asu: asa",
            "Atsam: cch",
            "Azeri (Cyrillic): az",
            "Azeri (Perso-Arabic): az",
            "Azeri: az",
            "Bafia: ksf",
            "Baluchi (Latin): bal",
            "Baluchi: bal",
            "Bambara (N’Ko): bm",
            "Bambara: bm",
            "Bangla: bn",
            "Basaa: bas",
            "Bashkir: ba",
            "Basque: eu",
            "Belarusian: be",
            "Bemba: bem",
            "Bena: bez",
            "Betawi: bew",
            "Bhojpuri: bho",
            "Blin: byn",
            "Bodo: brx",
            "Bosnian (Cyrillic): bs",
            "Bosnian: bs",
            "Breton: br",
            "Bulgarian: bg",
            "Caddo: cad",
            "Catalan: ca",
            "Cebuano: ceb",
            "Chakma: ccp",
            "Chechen: ce",
            "Cherokee: chr",
            "Chickasaw: cic",
            "Chiga: cgg",
            "Chinese, Cantonese (Simplified Han): yue",
            "Chinese, Cantonese: yue",
            "Chinese, Mandarin (Latin): zh",
            "Chinese, Mandarin: zh",
            "Chinese, Traditional Mandarin (Traditional Han): zh",
            "Choctaw: cho",
            "Church Slavic: cu",
            "Chuvash: cv",
            "Colognian: ksh",
            "Coptic: cop",
            "Cornish: kw",
            "Corsican: co",
            "Croatian: hr",
            "Czech: cs",
            "Danish: da",
            "Dari (Afghanistan): fa",
            "Divehi: dv",
            "Dogri: doi",
            "Duala: dua",
            "Dutch: nl",
            "Dzongkha: dz",
            "Embu: ebu",
            "English (Deseret): en",
            "English (Shavian): en",
            "English (South Africa): en",
            "English: en",
            "Erzya: myv",
            "Esperanto: eo",
            "Estonian: et",
            "Ewe: ee",
            "Ewondo: ewo",
            "Faroese: fo",
            "Filipino: fil",
            "Finnish: fi",
            "French, Canadian (Canada): fr",
            "French: fr",
            "Frisian, Northern: frr",
            "Frisian, Western: fy",
            "Friulian: fur",
            "Fula (Adlam): ff",
            "Fula: ff",
            "Ga: gaa",
            "Galician: gl",
            "Ganda: lg",
            "Geez: gez",
            "Georgian: ka",
            "German, Low: nds",
            "German, Swiss High (Switzerland): de",
            "German, Swiss: gsw",
            "German: de",
            "Greek: el",
            "Guarani: gn",
            "Gujarati: gu",
            "Gusii: guz",
            "Haitian Creole: ht",
            "Haryanvi: bgc",
            "Hausa (Niger): ha",
            "Hausa (Perso-Arabic): ha",
            "Hausa: ha",
            "Hawaiian: haw",
            "Hebrew: he",
            "Hindi: hi",
            "Hinglish (Latin): hi",
            "Hmong Njua: hnj",
            "Hungarian: hu",
            "Icelandic: is",
            "Ido: io",
            "Igbo: ig",
            "Indonesian: id",
            "Interlingua: ia",
            "Interlingue: ie",
            "International Phonetic Alphabet: ipa",
            "Inuktitut (Latin): iu",
            "Inuktitut: iu",
            "Irish: ga",
            "Italian: it",
            "Japanese: ja",
            "Javanese: jv",
            "Jju: kaj",
            "Jola-Fonyi: dyo",
            "Kabuverdianu: kea",
            "Kabyle: kab",
            "Kaingang: kgp",
            "Kako: kkj",
            "Kalaallisut: kl",
            "Kalenjin: kln",
            "Kamba: kam",
            "Kangri: xnr",
            "Kannada: kn",
            "Kara-Kalpak (Latin): kaa",
            "Kara-Kalpak: kaa",
            "Kashmiri (Devanagari): ks",
            "Kashmiri: ks",
            "Kazakh (Perso-Arabic): kk",
            "Kazakh: kk",
            "Kenyang: ken",
            "Khmer: km",
            "Kikuyu: ki",
            "Kinyarwanda: rw",
            "Kirghiz: ky",
            "Konkani (Latin): kok",
            "Konkani: kok",
            "Korean: ko",
            "Koyra Chiini: khq",
            "Koyraboro Senni: ses",
            "Kpelle: kpe",
            "Kurdish, Sorani: ckb",
            "Kurdish: ku",
            "Kuvi (Devanagari): kxv",
            "Kuvi (Odia): kxv",
            "Kuvi (Telugu): kxv",
            "Kuvi: kxv",
            "Kwasio: nmg",
            "Kʼicheʼ: quc",
            "Lakota: lkt",
            "Langi: lag",
            "Lao: lo",
            "Latgalian: ltg",
            "Latin: la",
            "Latvian: lv",
            "Ligurian: lij",
            "Lingala: ln",
            "Lithuanian: lt",
            "Lojban: jbo",
            "Lombard: lmo",
            "Luba-Katanga: lu",
            "Luo: luo",
            "Luri, Northern: lrc",
            "Luxembourgish: lb",
            "Luyia: luy",
            "Macedonian: mk",
            "Machame: jmc",
            "Maithili: mai",
            "Makhuwa-Meetto: mgh",
            "Makhuwa: vmw",
            "Makonde: kde",
            "Malagasy: mg",
            "Malay (Perso-Arabic): ms",
            "Malay: ms",
            "Malayalam: ml",
            "Maltese: mt",
            "Manipuri (Meitei Mayek): mni",
            "Manipuri: mni",
            "Manx: gv",
            "Māori: mi",
            "Mapuche: arn",
            "Marathi: mr",
            "Masai: mas",
            "Mazanderani: mzn",
            "Meru: mer",
            "Metaʼ: mgo",
            "Mi'kmaw: mic",
            "Mohawk: moh",
            "Moksha: mdf",
            "Mongolian (Mongolian): mn",
            "Mongolian: mn",
            "Morisyen: mfe",
            "Mundang: mua",
            "Mvskoke: mus",
            "Myanmar Language: my",
            "N’Ko: nqo",
            "Nama: naq",
            "Navajo: nv",
            "Ndebele, North: nd",
            "Nepali: ne",
            "Ngiemboon: nnh",
            "Ngomba: jgo",
            "Nheengatu: yrl",
            "Northern Sotho: nso",
            "Norwegian: no",
            "Nuer: nus",
            "Nyanja: ny",
            "Nyankole: nyn",
            "Obolo: ann",
            "Occitan (Spain): oc",
            "Occitan: oc",
            "Odia: or",
            "Oromo: om",
            "Osage: osa",
            "Ossetic: os",
            "Papiamento: pap",
            "Persian: fa",
            "Pidgin, Nigerian: pcm",
            "Pijin: pis",
            "Polish: pl",
            "Portuguese, European (Portugal): pt",
            "Portuguese: pt",
            "Prussian: prg",
            "Punjabi (Perso-Arabic): pa",
            "Punjabi: pa",
            "Pushto (Pakistan): ps",
            "Pushto: ps",
            "Quechua: qu",
            "Rajasthani: raj",
            "Riffian: rif",
            "Rohingya: rhg",
            "Romanian: ro",
            "Romansh: rm",
            "Rombo: rof",
            "Rundi: rn",
            "Russian: ru",
            "Rwa: rwk",
            "Saho: ssy",
            "Samburu: saq",
            "Sami, Inari: smn",
            "Sami, Lule: smj",
            "Sami, Northern: se",
            "Sami, Skolt: sms",
            "Sami, Southern (Norway): sma",
            "Sami, Southern: sma",
            "Sango: sg",
            "Sangu: sbp",
            "Sanskrit: sa",
            "Santali (Devanagari): sat",
            "Santali: sat",
            "Sardinian: sc",
            "Saxon, Low (Netherlands): nds",
            "Scottish Gaelic: gd",
            "Sena: seh",
            "Serbian (Latin): sr",
            "Serbian: sr",
            "Shambala: ksb",
            "Shan: shn",
            "Shona: sn",
            "Sichuan Yi: ii",
            "Sicilian: scn",
            "Sidamo: sid",
            "Silesian: szl",
            "Sindhi (Devanagari): sd",
            "Sindhi: sd",
            "Sinhala: si",
            "Slovak: sk",
            "Slovenian: sl",
            "Soga: xog",
            "Somali: so",
            "Sorbian, Lower: dsb",
            "Sorbian, Upper: hsb",
            "South Ndebele: nr",
            "Southern Kurdish: sdh",
            "Southern Sotho: st",
            "Spanish: es",
            "Sundanese: su",
            "Swahili (Kenya): sw",
            "Swahili, Congo (Congo (DRC)): sw",
            "Swahili: sw",
            "Swampy Cree: csw",
            "Swati: ss",
            "Swedish: sv",
            "Syriac: syr",
            "Tachelhit (Latin): shi",
            "Tachelhit: shi",
            "Tai Dam: blt",
            "Taita: dav",
            "Tajik: tg",
            "Tamazight, Central Atlas: tzm",
            "Tamazight, Standard Moroccan: zgh",
            "Tamil: ta",
            "Taroko: trv",
            "Tasawaq: twq",
            "Tatar: tt",
            "Telugu: te",
            "Teso: teo",
            "Thai: th",
            "Tibetan: bo",
            "Tigre: tig",
            "Tigrinya (Eritrea): ti",
            "Tigrinya: ti",
            "Tok Pisin: tpi",
            "Toki Pona: tok",
            "Tongan: to",
            "Torwali: trw",
            "Tsonga: ts",
            "Tswana: tn",
            "Turkish: tr",
            "Turkmen: tk",
            "Tuvinian: tyv",
            "Tyap: kcg",
            "Uighur: ug",
            "Ukrainian: uk",
            "Urdu: ur",
            "Uzbek (Cyrillic): uz",
            "Uzbek (Perso-Arabic): uz",
            "Uzbek: uz",
            "Vai (Latin): vai",
            "Vai: vai",
            "Venda: ve",
            "Venetian: vec",
            "Vietnamese: vi",
            "Volapük: vo",
            "Vunjo: vun",
            "Walloon: wa",
            "Walser: wae",
            "Warlpiri: wbp",
            "Welsh: cy",
            "Western Balochi: bgn",
            "Wolaytta: wal",
            "Wolof: wo",
            "Xhosa: xh",
            "Yakut: sah",
            "Yangben: yav",
            "Yiddish: yi",
            "Yoruba (Benin): yo",
            "Yoruba: yo",
            "Zarma: dje",
            "Zhuang: za",
            "Zulu: zu",
        }

    def test_scan_full(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        supported = o.get_supported_orthographies(full_only=True)
        orthographies = {f"{ot.name}: {ot.code}" for ot in supported}
        assert orthographies == {
            "Afar: aa",
            "Asu: asa",
            "Bemba: bem",
            "Bena: bez",
            "Chiga: cgg",
            "Cornish: kw",
            "Embu: ebu",
            "Friulian: fur",
            "Ganda: lg",
            "Guarani: gn",
            "Gusii: guz",
            "Ido: io",
            "Inuktitut (Latin): iu",
            "Javanese: jv",
            "Jju: kaj",
            "Jola-Fonyi: dyo",
            "Kalenjin: kln",
            "Kamba: kam",
            "Kikuyu: ki",
            "Kinyarwanda: rw",
            "Kʼicheʼ: quc",
            "Luo: luo",
            "Luyia: luy",
            "Machame: jmc",
            "Makhuwa-Meetto: mgh",
            "Makonde: kde",
            "Malagasy: mg",
            "Māori: mi",
            "Meru: mer",
            "Morisyen: mfe",
            "Ndebele, North: nd",
            "Northern Sotho: nso",
            "Nyanja: ny",
            "Nyankole: nyn",
            "Rombo: rof",
            "Rundi: rn",
            "Rwa: rwk",
            "Saho: ssy",
            "Samburu: saq",
            "Sami, Inari: smn",
            "Sami, Lule: smj",
            "Sami, Northern: se",
            "Sami, Southern (Norway): sma",
            "Sami, Southern: sma",
            "Sango: sg",
            "Sangu: sbp",
            "Sena: seh",
            "Shambala: ksb",
            "Shona: sn",
            "Sidamo: sid",
            "Soga: xog",
            "South Ndebele: nr",
            "Swati: ss",
            "Taita: dav",
            "Teso: teo",
            "Tok Pisin: tpi",
            "Tsonga: ts",
            "Vunjo: vun",
            "Warlpiri: wbp",
            "Wolof: wo",
        }

    def test_scan_base(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        supported = o.get_supported_orthographies(full_only=False)
        orthographies = {f"{ot.name}: {ot.code}" for ot in supported}
        assert orthographies == {
            "Afar: aa",
            "Asu: asa",
            "Bemba: bem",
            "Bena: bez",
            "Breton: br",
            "Chiga: cgg",
            "Cornish: kw",
            "Embu: ebu",
            "Friulian: fur",
            "Ganda: lg",
            "German, Swiss: gsw",
            "Guarani: gn",
            "Gusii: guz",
            "Hinglish (Latin): hi",
            "Ido: io",
            "Inuktitut (Latin): iu",
            "Javanese: jv",
            "Jju: kaj",
            "Jola-Fonyi: dyo",
            "Kalaallisut: kl",
            "Kalenjin: kln",
            "Kamba: kam",
            "Kikuyu: ki",
            "Kinyarwanda: rw",
            "Kʼicheʼ: quc",
            "Luo: luo",
            "Luyia: luy",
            "Machame: jmc",
            "Makhuwa-Meetto: mgh",
            "Makonde: kde",
            "Malagasy: mg",
            "Māori: mi",
            "Meru: mer",
            "Morisyen: mfe",
            "Ndebele, North: nd",
            "Northern Sotho: nso",
            "Nyanja: ny",
            "Nyankole: nyn",
            "Romansh: rm",
            "Rombo: rof",
            "Rundi: rn",
            "Rwa: rwk",
            "Saho: ssy",
            "Samburu: saq",
            "Sami, Inari: smn",
            "Sami, Lule: smj",
            "Sami, Northern: se",
            "Sami, Southern (Norway): sma",
            "Sami, Southern: sma",
            "Sango: sg",
            "Sangu: sbp",
            "Sena: seh",
            "Shambala: ksb",
            "Shona: sn",
            "Sidamo: sid",
            "Soga: xog",
            "South Ndebele: nr",
            "Swati: ss",
            "Taita: dav",
            "Taroko: trv",
            "Teso: teo",
            "Tok Pisin: tpi",
            "Tsonga: ts",
            "Vunjo: vun",
            "Walser: wae",
            "Warlpiri: wbp",
            "Wolof: wo",
            "Zulu: zu",
        }

    def test_scan_minimal(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        supported = o.get_supported_orthographies_minimum()
        orthographies = {f"{ot.name}: {ot.code}" for ot in supported}
        assert orthographies == {
            "Aragonese: an",
            "Basque: eu",
            "Colognian: ksh",
            "Czech: cs",
            "Danish: da",
            "English (South Africa): en",
            "English: en",
            "Estonian: et",
            "Finnish: fi",
            "French, Canadian (Canada): fr",
            "French: fr",
            "Frisian, Northern: frr",
            "Galician: gl",
            "German, Low: nds",
            "German, Swiss High (Switzerland): de",
            "German: de",
            "Hungarian: hu",
            "Indonesian: id",
            "Interlingua: ia",
            "Interlingue: ie",
            "Irish: ga",
            "Italian: it",
            "Kabuverdianu: kea",
            "Kaingang: kgp",
            "Konkani (Latin): kok",
            "Kurdish: ku",
            "Lombard: lmo",
            "Luxembourgish: lb",
            "Nheengatu: yrl",
            "Norwegian: no",
            "Occitan (Spain): oc",
            "Occitan: oc",
            "Portuguese, European (Portugal): pt",
            "Portuguese: pt",
            "Quechua: qu",
            "Sardinian: sc",
            "Scottish Gaelic: gd",
            "Slovak: sk",
            "Slovenian: sl",
            "Sorbian, Lower: dsb",
            "Sorbian, Upper: hsb",
            "Spanish: es",
            "Sundanese: su",
            "Turkish: tr",
            "Venetian: vec",
            "Walloon: wa",
            "Welsh: cy",
            "Xhosa: xh",
        }

    def test_almost_supported(self):
        # Check which orthographies are missing at most 3 characters
        o = OrthographyInfo()
        o.cmap = get_cmap()
        supported = o.get_almost_supported(3)
        orthographies = {f"{ot.name}: {ot.code}" for ot in supported}
        assert orthographies == {
            "Obolo: ann",
            "Betawi: bew",
            "Catalan: ca",
            "Caddo: cad",
            "Choctaw: cho",
            "Chickasaw: cic",
            "Zarma: dje",
            "Hawaiian: haw",
            "Igbo: ig",
            "Kara-Kalpak (Latin): kaa",
            "Tyap: kcg",
            "Koyra Chiini: khq",
            "Lakota: lkt",
            "Metaʼ: mgo",
            "Mi'kmaw: mic",
            "Mohawk: moh",
            "Navajo: nv",
            "Prussian: prg",
            "Sicilian: scn",
            "Koyraboro Senni: ses",
            "Silesian: szl",
            "Tongan: to",
            "Tasawaq: twq",
            "Uzbek: uz",
        }

    def test_get_missing(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        ot = o.orthography("de", territory="CH")
        assert ot is not None

        missing = set(ot.get_missing(minimum=False, punctuation=False))
        assert missing == {
            33,
            34,
            35,
            38,
            39,
            40,
            41,
            42,
            47,
            58,
            59,
            63,
            64,
            91,
            93,
            123,
            125,
            167,
            171,
            187,
            276,
            277,
            300,
            301,
            334,
            335,
            8211,
            8212,
            8216,
            8218,
            8220,
            8222,
            8230,
        }

    def test_get_missing_minimum(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        ot = o.orthography("agq")
        assert ot is not None

        missing = set(ot.get_missing(minimum=True, punctuation=False))
        assert missing == {
            390,
            400,
            407,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            580,
            596,
            603,
            616,
            649,
            660,
        }

    def test_get_missing_punctuation(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        ot = o.orthography("de", territory="CH")
        assert ot is not None

        missing = set(ot.get_missing(minimum=False, punctuation=True))
        assert missing == {
            33,
            34,
            35,
            38,
            39,
            40,
            41,
            42,
            47,
            58,
            59,
            63,
            64,
            91,
            93,
            123,
            125,
            167,
            171,
            187,
            8211,
            8212,
            8216,
            8218,
            8220,
            8222,
            8230,
        }

    def test_get_missing_unknown(self):
        o = OrthographyInfo()
        o.cmap = get_cmap()
        ot = o.orthography("jens")
        assert ot is None

    def test_single_orthography(self):
        # Info about one orthography
        o = OrthographyInfo()
        ot = o.orthography("en", "DFLT", "ZA")
        assert ot is not None
        assert ot.name == "English (South Africa)"
        assert ot.unicodes_base == {
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
        }

    def test_reverse(self):
        """
        Get orthographies that support a given codepoint.
        """
        o = OrthographyInfo()
        o.build_reverse_cmap()
        u = ord("ö")
        result1 = {ot.code for ot in o.get_orthographies_for_unicode(u)}
        assert result1 == {
            "af",
            "az",
            "cy",
            "de",
            "et",
            "fi",
            "frr",
            "fy",
            "gsw",
            "hu",
            "is",
            "ksh",
            "lij",
            "nds",
            "nl",
            "nmg",
            "nus",
            "sg",
            "sma",
            "sv",
            "tk",
            "tr",
            "vo",
            "wae",
        }

        result2 = {ot.code for ot in o.get_orthographies_for_unicode_any(u)}
        assert result2 == {
            "af",
            "ak",
            "an",
            "ast",
            "az",
            "bew",
            "blo",
            "br",
            "ca",
            "cs",
            "cy",
            "da",
            "de",
            "dsb",
            "ee",
            "en",
            "es",
            "et",
            "eu",
            "fi",
            "fr",
            "frr",
            "fy",
            "gd",
            "gl",
            "gsw",
            "hsb",
            "hu",
            "ia",
            "id",
            "ie",
            "is",
            "it",
            "kaa",
            "kea",
            "kgp",
            "kok",
            "ksh",
            "lb",
            "lij",
            "lmo",
            "nds",
            "nl",
            "nmg",
            "no",
            "nus",
            "oc",
            "pl",
            "pt",
            "qu",
            "rif",
            "rm",
            "ro",
            "sc",
            "se",
            "sg",
            "sk",
            "sl",
            "sma",
            "smj",
            "smn",
            "sms",
            "su",
            "sv",
            "szl",
            "tk",
            "to",
            "tr",
            "uz",
            "vo",
            "wa",
            "wae",
            "xh",
            "yrl",
            "zu",
        }
